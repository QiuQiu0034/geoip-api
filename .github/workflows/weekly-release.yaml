name: geoip-api release
on:
  workflow_dispatch:
  schedule:
    - cron:  '0 3 * * WED'
jobs:
  build-latest:
    runs-on: ubuntu-latest
    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v2

    - id: determine-tag
      name: Determine Docker tag
      run: echo "::set-output name=tag::$(date +%Y-%V)"

    - id: build-date
      name: Determine build date
      run: echo "::set-output name=date::$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

    - name: Build and push to DockerHub registry
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          MAXMIND_LICENSE_KEY=${{ secrets.MAXMIND_LICENSE_KEY }}
          CREATED_AT=${{ steps.build-date.outputs.date }}
          VERSION=${{ steps.determine-tag.outputs.tag }}
          GIT_REVISION=${{ github.sha }}
        tags: |
          observabilitystack/geoip-api:${{ steps.determine-tag.outputs.tag }}
          observabilitystack/geoip-api:latest
          ghcr.io/observabilitystack/geoip-api:${{ steps.determine-tag.outputs.tag }}
          ghcr.io/observabilitystack/geoip-api:latest

  build-native:
    runs-on: ubuntu-latest
    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v2

    - id: determine-tag
      name: Determine Docker tag
      run: echo "::set-output name=tag::$(date +%Y-%V)"

    - id: build-date
      name: Determine build date
      run: echo "::set-output name=date::$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

    - name: Build and push native image to DockerHub registry
      uses: docker/build-push-action@v2
      with:
        file: Dockerfile.native
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          MAXMIND_LICENSE_KEY=${{ secrets.MAXMIND_LICENSE_KEY }}
          CREATED_AT=${{ steps.build-date.outputs.date }}
          VERSION=${{ steps.determine-tag.outputs.tag }}
          GIT_REVISION=${{ github.sha }}
        tags: |
          observabilitystack/geoip-api:${{ steps.determine-tag.outputs.tag }}-native
          observabilitystack/geoip-api:latest-native
          ghcr.io/observabilitystack/geoip-api:${{ steps.determine-tag.outputs.tag }}-native
          ghcr.io/observabilitystack/geoip-api:latest-native

  create-release:
    runs-on: ubuntu-latest
    needs: build-latest
    steps:

    - id: build-date
      name: Determine build date
      run: echo "::set-output name=date::$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.determine-tag.outputs.tag }}
        body: |
          Weekly release with updated geoip information
          as of week ${{ steps.determine-tag.outputs.tag }}.
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
